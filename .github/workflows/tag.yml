name: Build application

on:
  release:
    types:
      - published

permissions:
  contents: read
  id-token: write

jobs:
  test:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.11"
          - "3.12"
          - "3.13"
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pylint
    - name: Test with pytest
      run: |
        pytest --cov-report term --cov-report xml:coverage.xml --cov=pancham

  build:
    runs-on: ubuntu-latest
    needs:
      - test
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.12
        uses: actions/setup-python@v3
        with:
          python-version: 3.12
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Get release
        id: get_release
        uses: bruceadams/get-release@v1.3.2
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Build
        run: python -m build
        env:
          STRAW_VERSION: ${{ steps.get_release.outputs.tag_name }}
      - uses: actions/upload-artifact@v4
        name: Publish
        with:
          path: dist/*.whl
          name: jsonstraw-${{ steps.get_release.outputs.tag_name }}
      - uses: actions/upload-artifact@v4
        name: Publish
        with:
          path: dist/*.tar.gz
          name: jsonstraw-achive-${{ steps.get_release.outputs.tag_name }}
      - uses: actions/upload-artifact@v4
        name: release-dists
        with:
          path: dist/
          name: release-dists

  publish:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
    - name: Download
      uses: actions/download-artifact@v4
      with:
        name: release-dists
        path: dist/
    - name: Publish release distributions to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
